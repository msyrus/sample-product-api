// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/msyrus/simple-product-inv/repo (interfaces: Rating)

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	gomock "github.com/golang/mock/gomock"
	repo "github.com/msyrus/simple-product-inv/repo"
	reflect "reflect"
)

// MockRating is a mock of Rating interface
type MockRating struct {
	ctrl     *gomock.Controller
	recorder *MockRatingMockRecorder
}

// MockRatingMockRecorder is the mock recorder for MockRating
type MockRatingMockRecorder struct {
	mock *MockRating
}

// NewMockRating creates a new mock instance
func NewMockRating(ctrl *gomock.Controller) *MockRating {
	mock := &MockRating{ctrl: ctrl}
	mock.recorder = &MockRatingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRating) EXPECT() *MockRatingMockRecorder {
	return m.recorder
}

// Avg mocks base method
func (m *MockRating) Avg(arg0 repo.Query, arg1 string) (float64, error) {
	ret := m.ctrl.Call(m, "Avg", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Avg indicates an expected call of Avg
func (mr *MockRatingMockRecorder) Avg(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Avg", reflect.TypeOf((*MockRating)(nil).Avg), arg0, arg1)
}

// Create mocks base method
func (m *MockRating) Create(arg0 interface{}) (string, error) {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockRatingMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRating)(nil).Create), arg0)
}
